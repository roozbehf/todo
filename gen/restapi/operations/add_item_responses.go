// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/roozbehf/todo/gen/models"
)

// AddItemAcceptedCode is the HTTP code returned for type AddItemAccepted
const AddItemAcceptedCode int = 202

/*AddItemAccepted Accepted

swagger:response addItemAccepted
*/
type AddItemAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.AddResponse `json:"body,omitempty"`
}

// NewAddItemAccepted creates AddItemAccepted with default headers values
func NewAddItemAccepted() *AddItemAccepted {

	return &AddItemAccepted{}
}

// WithPayload adds the payload to the add item accepted response
func (o *AddItemAccepted) WithPayload(payload *models.AddResponse) *AddItemAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add item accepted response
func (o *AddItemAccepted) SetPayload(payload *models.AddResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddItemAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddItemDefault Error

swagger:response addItemDefault
*/
type AddItemDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload models.ErrorResponse `json:"body,omitempty"`
}

// NewAddItemDefault creates AddItemDefault with default headers values
func NewAddItemDefault(code int) *AddItemDefault {
	if code <= 0 {
		code = 500
	}

	return &AddItemDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add item default response
func (o *AddItemDefault) WithStatusCode(code int) *AddItemDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add item default response
func (o *AddItemDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add item default response
func (o *AddItemDefault) WithPayload(payload models.ErrorResponse) *AddItemDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add item default response
func (o *AddItemDefault) SetPayload(payload models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddItemDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
